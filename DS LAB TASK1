TASK1 

import java.util.Scanner;

public class SmallestLargest {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);
        int[] numbers = new int[10];

        System.out.println("Enter 10 integers:");
        for (int i = 0; i < numbers.length; i++) {
            numbers[i] = sc.nextInt();
        }

        int smallest = numbers[0];
        int largest = numbers[0];

        for (int i = 1; i < numbers.length; i++) {
            if (numbers[i] < smallest) {
                smallest = numbers[i];
            }
            if (numbers[i] > largest) {
                largest = numbers[i];
            }
        }

        System.out.println("Smallest: " + smallest);
        System.out.println("Largest: " + largest);
    }
}

TASK2
public class PrimeCheck100to500 {
    public static void main(String[] args) {
        int[] primes = new int[500]; // big enough array
        int count = 0;               // counter for array index

        // Loop numbers from 100 to 500
        for (int num = 100; num <= 500; num++) {
            int factors = 0;

            // Count factors of num
            for (int i = 1; i <= num; i++) {
                if (num % i == 0) {
                    factors++;
                }
            }

            // Prime numbers have exactly 2 factors
            if (factors == 2) {
                primes[count] = num;
                count++;
            }
        }

        // Print primes stored in array
        System.out.println("Prime numbers from 100 to 500:");
        for (int i = 0; i < count; i++) {
            System.out.print(primes[i] + " ");
        }
    }
}



TASk3 
import java.util.Scanner;

public class FibonacciArray {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // Ask user for input
        System.out.print("Enter a number: ");
        int n = sc.nextInt();

        // Create an array to hold Fibonacci numbers
        int[] fib = new int[n];

        // First two numbers
        fib[0] = 0;
        if (n > 1) {
            fib[1] = 1;
        }

        // Generate Fibonacci series using loop
        for (int i = 2; i < n; i++) {
            fib[i] = fib[i - 1] + fib[i - 2];
        }

        // Display Fibonacci numbers
        System.out.println("Fibonacci Series:");
        for (int i = 0; i < n; i++) {
            System.out.print(fib[i] + " ");
        }
    }
}



TAK 4
import java.util.ArrayList;

public class ArrayListMethodsExample {
    public static void main(String[] args) {
        // Create an ArrayList of Strings
        ArrayList<String> fruits = new ArrayList<>();

        // 1. add() - Add elements
        fruits.add("Apple");
        fruits.add("Banana");
        fruits.add("Orange");
        fruits.add("Mango");

        System.out.println("Fruits: " + fruits);

        // 2. get() - Get element by index
        System.out.println("First fruit: " + fruits.get(0));

        // 3. set() - Update element at index
        fruits.set(1, "Grapes");
        System.out.println("After update: " + fruits);

        // 4. remove() - Remove element
        fruits.remove("Orange");
        System.out.println("After removing Orange: " + fruits);

        // 5. size() - Get number of elements
        System.out.println("Total fruits: " + fruits.size());

        // 6. contains() - Check if element exists
        if (fruits.contains("Mango")) {
            System.out.println("Mango is in the list.");
        } else {
            System.out.println("Mango is not in the list.");
        }
    }
}

TAK 5
public class ConsecutiveDuplicates {
    public static void main(String[] args) {
        // Example array
        int[] arr = {5, 7, 7, 2, 3, 3, 3, 8, 9, 9};

        // Loop to check consecutive elements
        for (int i = 0; i < arr.length - 1; i++) {
            if (arr[i] == arr[i + 1]) {
                System.out.println("Duplicate found: Value = " + arr[i] +
                                   " at positions " + i + " and " + (i + 1));
            }
        }
    }
}

TASK6
public class PrintDuplicates {
    public static void main(String[] args) {
        // Example array
        int[] arr = {5, 7, 3, 7, 2, 3, 8, 9, 3, 5};

        System.out.println("Duplicate elements in the array:");

        // Check each element against all others
        for (int i = 0; i < arr.length; i++) {
            for (int j = i + 1; j < arr.length; j++) {
                if (arr[i] == arr[j]) {
                    System.out.println("Value = " + arr[i] +
                                       " found at positions " + i + " and " + j);
                }
            }
        }
    }
}

TAK 7

import java.util.Scanner;

public class FindOccurrences {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        int[] arr = new int[10];

        // Input 10 values
        System.out.println("Enter 10 numbers:");
        for (int i = 0; i < arr.length; i++) {
            arr[i] = sc.nextInt();
        }

        // Ask user for the value to search
        System.out.print("Enter a value to search: ");
        int value = sc.nextInt();

        boolean found = false;

        // Search for occurrences
        System.out.println("Searching for " + value + "...");
        for (int i = 0; i < arr.length; i++) {
            if (arr[i] == value) {
                System.out.println("Found at index: " + i);
                found = true;
            }
        }

        // If not found
        if (!found) {
            System.out.println("Not found");
        }
    }
}












